#TIMEHORIZON
T = 8760;

#NODE SMR // steam methane reformers 
// Hydrogen4Europe data for 2050 have been taken as defaults for efficiency and cost parameters

#PARAMETERS
unit_GW = 0;
energy_hydrogen = 0;
pre_installed_capacity = 2.0;                       // GW(h2_lhv)
max_capacity = 100;                                 // GW(h2_lhv)
// Data from H24Eu (to change)
capex_existing = 805;                               // M€/GW(h2_lhv)
fom_existing = 37.8;                                // M€/GW(h2_lhv)
vom_existing = 0.17/(10**3);                        // M€/GWh(h2_lhv)
lifetime_existing = 25;                             // years
// Data from H24Eu
capex = 805;                                        // M€/GW(h2_lhv)
fom = 37.8;                                         // M€/GW(h2_lhv)
vom = 0.17/(10**3);                                 // M€/GWh(h2_lhv)
conversion_efficiency = 0.76;                       // GWh(h2_lhv)/GWh(ch4_hhv)
electricity_required_for_H2 = 0.02;                 // GWh(e)/Gwh(h2_lhv)
lifetime = 25;                                      // years
// Other       
ramp_rate_down = 1;
ramp_rate_up = 1;
spec_CO2_emission = 0.202;                          // kt/GWh 
min_external_power = 0.0; 
nb_year = T/8760;                                   // years
// yearly capex
wacc = 0.07;
yearly_capex = capex * wacc / (1 - (1 + wacc)**(-lifetime));                                    // M€/year
// used to compute the total cost of the system after the optimisation
yearly_capex_existing = capex_existing * wacc / (1 - (1 + wacc)**(-lifetime_existing));         // M€/GW(h2_lhv)/yr
yearly_existing_cost = (yearly_capex_existing + fom_existing) * pre_installed_capacity;         // M€/yr

#VARIABLES
internal: new_capacity;                             // GW(h2_lhv)
external: ng_consumed[T];                           // GWh(ch4_lhv)
external: e_consumed[T];                            // GWh(e)
external: h2_produced[T];                           // GWh(h2_lhv)
external: co2_produced[T];                          // kt(co2)

#CONSTRAINTS
new_capacity >= 0;
h2_produced[t] >= 0;
pre_installed_capacity + new_capacity <= max_capacity;
h2_produced[t] <= new_capacity + pre_installed_capacity;
h2_produced[i] <= h2_produced[i-1] + ramp_rate_up * (pre_installed_capacity + new_capacity) for i in [1:T-1];
h2_produced[i] >= h2_produced[i-1] - ramp_rate_down * (pre_installed_capacity + new_capacity) for i in [1:T-1];
h2_produced[t] == conversion_efficiency * ng_consumed[t];
e_consumed[t] == electricity_required_for_H2 * h2_produced[t];
co2_produced[t] == spec_CO2_emission * ng_consumed[t];

#OBJECTIVES
min fix_cost: (yearly_capex + fom) * nb_year * new_capacity ; 	    // M€
min var_cost: vom * h2_produced[t];                                 // M€